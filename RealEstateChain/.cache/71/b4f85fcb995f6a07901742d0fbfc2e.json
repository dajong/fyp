{"id":"property.js","dependencies":[{"name":"/Users/dajong/LIT course/FYP documents/fyp/RealEstateChain/package.json","includedInParent":true,"mtime":1681129535679},{"name":"axios","loc":{"line":2,"column":18,"index":39},"parent":"/Users/dajong/LIT course/FYP documents/fyp/RealEstateChain/public/js/property.js","resolved":"/Users/dajong/LIT course/FYP documents/fyp/RealEstateChain/node_modules/axios/index.js"},{"name":"../../utils/catchAsync","loc":{"line":3,"column":23,"index":71},"parent":"/Users/dajong/LIT course/FYP documents/fyp/RealEstateChain/public/js/property.js","resolved":"/Users/dajong/LIT course/FYP documents/fyp/RealEstateChain/utils/catchAsync.js"},{"name":"./alerts","loc":{"line":4,"column":26,"index":123},"parent":"/Users/dajong/LIT course/FYP documents/fyp/RealEstateChain/public/js/property.js","resolved":"/Users/dajong/LIT course/FYP documents/fyp/RealEstateChain/public/js/alerts.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.soldProperty = exports.placeBid = exports.getProperty = exports.createProperty = exports.addView = void 0;\nvar _axios = _interopRequireDefault(require(\"axios\"));\nvar _catchAsync = _interopRequireDefault(require(\"../../utils/catchAsync\"));\nvar _alerts = require(\"./alerts\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar createProperty = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(address, city, listingNum, propertyStyle, garageType, garageSize, berRating, squareFeet, lotSize, numBedroom, numBathroom, price, imageCover, description, biddingPrice) {\n    var res;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return (0, _axios.default)({\n            method: 'POST',\n            url: 'http://localhost:3000/api/v1/properties',\n            data: {\n              address: address,\n              city: city,\n              listingNum: listingNum,\n              propertyStyle: propertyStyle,\n              garageType: garageType,\n              garageSize: garageSize,\n              berRating: berRating,\n              squareFeet: squareFeet,\n              lotSize: lotSize,\n              numBedroom: numBedroom,\n              numBathroom: numBathroom,\n              price: price,\n              imageCover: imageCover,\n              description: description,\n              biddingPrice: biddingPrice\n            }\n          });\n        case 3:\n          res = _context.sent;\n          if (res.data.status === 'success') {\n            (0, _alerts.showAlert)('success', 'Property created successfully!');\n          }\n          _context.next = 11;\n          break;\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          (0, _alerts.showAlert)('error', _context.t0.response.data.message);\n          console.log(_context.t0);\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return function createProperty(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.createProperty = createProperty;\nvar getProperty = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(propertyId) {\n    var res;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return (0, _axios.default)({\n            method: 'GET',\n            url: \"http://localhost:3000/api/v1/properties/\".concat(propertyId)\n          });\n        case 3:\n          res = _context2.sent;\n          if (!(res.data.status === 'success')) {\n            _context2.next = 6;\n            break;\n          }\n          return _context2.abrupt(\"return\", res.data.data);\n        case 6:\n          _context2.next = 11;\n          break;\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          (0, _alerts.showAlert)('error', _context2.t0.response.data.message);\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 8]]);\n  }));\n  return function getProperty(_x16) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexports.getProperty = getProperty;\nvar soldProperty = (0, _catchAsync.default)( /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(propertyAddress) {\n    var res;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return (0, _axios.default)({\n            method: \"POST\",\n            url: \"http://localhost:3000/api/v1/properties/soldProperty\",\n            data: {\n              address: propertyAddress\n            }\n          });\n        case 3:\n          res = _context3.sent;\n          if (res.data.status === \"success\") {\n            (0, _alerts.showAlert)(\"success\", \"Property Sold!\");\n            window.setTimeout(function () {\n              location.assign('/');\n            }, 1500);\n          }\n          _context3.next = 10;\n          break;\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          (0, _alerts.showAlert)(\"error\", _context3.t0);\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[0, 7]]);\n  }));\n  return function (_x17) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nexports.soldProperty = soldProperty;\nvar placeBid = (0, _catchAsync.default)( /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(propertyAddress, newBidPrice, curBidder) {\n    var res;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return (0, _axios.default)({\n            method: \"POST\",\n            url: \"http://localhost:3000/api/v1/properties/placeBid\",\n            data: {\n              address: propertyAddress,\n              biddingPrice: newBidPrice,\n              bidder: curBidder\n            }\n          });\n        case 3:\n          res = _context4.sent;\n          if (res.data.status === \"success\") {\n            (0, _alerts.showAlert)(\"success\", \"New bid is placed\");\n            setTimeout(function () {\n              document.location.reload();\n            }, 3000);\n          }\n          _context4.next = 11;\n          break;\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          (0, _alerts.showAlert)(\"error\", _context4.t0);\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[0, 7]]);\n  }));\n  return function (_x18, _x19, _x20) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nexports.placeBid = placeBid;\nvar addView = (0, _catchAsync.default)( /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(propertyAddress) {\n    var res;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return (0, _axios.default)({\n            method: \"POST\",\n            url: \"http://localhost:3000/api/v1/properties/addView\",\n            data: {\n              address: propertyAddress\n            }\n          });\n        case 3:\n          res = _context5.sent;\n          if (res.data.status === \"success\") {\n            console.log(\"user viewed!\");\n          }\n          _context5.next = 10;\n          break;\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          (0, _alerts.showAlert)(\"error\", _context5.t0);\n        case 10:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[0, 7]]);\n  }));\n  return function (_x21) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nexports.addView = addView;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"property.js","original":{"line":2,"column":0}},{"generated":{"line":8,"column":0},"source":"property.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"property.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":0},"source":"property.js","original":{"line":4,"column":37}},{"generated":{"line":11,"column":0},"source":"property.js","original":{"line":4,"column":37}},{"generated":{"line":12,"column":0},"source":"property.js","original":{"line":4,"column":37}},{"generated":{"line":12,"column":47},"source":"property.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"property.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"property.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"property.js","original":{"line":6,"column":7}},{"generated":{"line":15,"column":4},"source":"property.js","original":{"line":6,"column":13},"name":"createProperty"},{"generated":{"line":15,"column":18},"source":"property.js","original":{"line":6,"column":27}},{"generated":{"line":16,"column":2},"source":"property.js","original":{"line":6,"column":27}},{"generated":{"line":16,"column":72},"source":"property.js","original":{"line":6,"column":30}},{"generated":{"line":16,"column":89},"source":"property.js","original":{"line":6,"column":37},"name":"address"},{"generated":{"line":16,"column":96},"source":"property.js","original":{"line":6,"column":44}},{"generated":{"line":16,"column":98},"source":"property.js","original":{"line":6,"column":46},"name":"city"},{"generated":{"line":16,"column":102},"source":"property.js","original":{"line":6,"column":50}},{"generated":{"line":16,"column":104},"source":"property.js","original":{"line":6,"column":52},"name":"listingNum"},{"generated":{"line":16,"column":114},"source":"property.js","original":{"line":6,"column":62}},{"generated":{"line":16,"column":116},"source":"property.js","original":{"line":6,"column":64},"name":"propertyStyle"},{"generated":{"line":16,"column":129},"source":"property.js","original":{"line":6,"column":77}},{"generated":{"line":16,"column":131},"source":"property.js","original":{"line":6,"column":79},"name":"garageType"},{"generated":{"line":16,"column":141},"source":"property.js","original":{"line":6,"column":89}},{"generated":{"line":16,"column":143},"source":"property.js","original":{"line":6,"column":91},"name":"garageSize"},{"generated":{"line":16,"column":153},"source":"property.js","original":{"line":6,"column":101}},{"generated":{"line":16,"column":155},"source":"property.js","original":{"line":6,"column":103},"name":"berRating"},{"generated":{"line":16,"column":164},"source":"property.js","original":{"line":6,"column":112}},{"generated":{"line":16,"column":166},"source":"property.js","original":{"line":6,"column":114},"name":"squareFeet"},{"generated":{"line":16,"column":176},"source":"property.js","original":{"line":6,"column":124}},{"generated":{"line":16,"column":178},"source":"property.js","original":{"line":6,"column":126},"name":"lotSize"},{"generated":{"line":16,"column":185},"source":"property.js","original":{"line":6,"column":133}},{"generated":{"line":16,"column":187},"source":"property.js","original":{"line":6,"column":136},"name":"numBedroom"},{"generated":{"line":16,"column":197},"source":"property.js","original":{"line":6,"column":146}},{"generated":{"line":16,"column":199},"source":"property.js","original":{"line":6,"column":148},"name":"numBathroom"},{"generated":{"line":16,"column":210},"source":"property.js","original":{"line":6,"column":159}},{"generated":{"line":16,"column":212},"source":"property.js","original":{"line":6,"column":161},"name":"price"},{"generated":{"line":16,"column":217},"source":"property.js","original":{"line":6,"column":166}},{"generated":{"line":16,"column":219},"source":"property.js","original":{"line":6,"column":168},"name":"imageCover"},{"generated":{"line":16,"column":229},"source":"property.js","original":{"line":6,"column":178}},{"generated":{"line":16,"column":231},"source":"property.js","original":{"line":6,"column":180},"name":"description"},{"generated":{"line":16,"column":242},"source":"property.js","original":{"line":6,"column":191}},{"generated":{"line":16,"column":244},"source":"property.js","original":{"line":6,"column":193},"name":"biddingPrice"},{"generated":{"line":16,"column":256},"source":"property.js","original":{"line":6,"column":205}},{"generated":{"line":17,"column":4},"source":"property.js","original":{"line":6,"column":205}},{"generated":{"line":18,"column":4},"source":"property.js","original":{"line":6,"column":205}},{"generated":{"line":19,"column":6},"source":"property.js","original":{"line":6,"column":205}},{"generated":{"line":20,"column":8},"source":"property.js","original":{"line":6,"column":205}},{"generated":{"line":21,"column":10},"source":"property.js","original":{"line":6,"column":205}},{"generated":{"line":22,"column":10},"source":"property.js","original":{"line":6,"column":205}},{"generated":{"line":23,"column":10},"source":"property.js","original":{"line":6,"column":205}},{"generated":{"line":23,"column":17},"source":"property.js","original":{"line":8,"column":24}},{"generated":{"line":23,"column":21},"source":"property.js","original":{"line":8,"column":24},"name":"axios"},{"generated":{"line":23,"column":35},"source":"property.js","original":{"line":8,"column":29}},{"generated":{"line":23,"column":37},"source":"property.js","original":{"line":8,"column":30}},{"generated":{"line":24,"column":12},"source":"property.js","original":{"line":9,"column":8},"name":"method"},{"generated":{"line":24,"column":18},"source":"property.js","original":{"line":9,"column":14}},{"generated":{"line":24,"column":20},"source":"property.js","original":{"line":9,"column":16}},{"generated":{"line":24,"column":26},"source":"property.js","original":{"line":9,"column":22}},{"generated":{"line":25,"column":12},"source":"property.js","original":{"line":10,"column":8},"name":"url"},{"generated":{"line":25,"column":15},"source":"property.js","original":{"line":10,"column":11}},{"generated":{"line":25,"column":17},"source":"property.js","original":{"line":10,"column":13}},{"generated":{"line":25,"column":58},"source":"property.js","original":{"line":10,"column":54}},{"generated":{"line":26,"column":12},"source":"property.js","original":{"line":11,"column":8},"name":"data"},{"generated":{"line":26,"column":16},"source":"property.js","original":{"line":11,"column":12}},{"generated":{"line":26,"column":18},"source":"property.js","original":{"line":11,"column":14}},{"generated":{"line":27,"column":14},"source":"property.js","original":{"line":12,"column":10},"name":"address"},{"generated":{"line":27,"column":21},"source":"property.js","original":{"line":12,"column":17}},{"generated":{"line":27,"column":23},"source":"property.js","original":{"line":12,"column":10},"name":"address"},{"generated":{"line":27,"column":30},"source":"property.js","original":{"line":12,"column":17}},{"generated":{"line":28,"column":14},"source":"property.js","original":{"line":13,"column":10},"name":"city"},{"generated":{"line":28,"column":18},"source":"property.js","original":{"line":13,"column":14}},{"generated":{"line":28,"column":20},"source":"property.js","original":{"line":13,"column":10},"name":"city"},{"generated":{"line":28,"column":24},"source":"property.js","original":{"line":13,"column":14}},{"generated":{"line":29,"column":14},"source":"property.js","original":{"line":14,"column":10},"name":"listingNum"},{"generated":{"line":29,"column":24},"source":"property.js","original":{"line":14,"column":20}},{"generated":{"line":29,"column":26},"source":"property.js","original":{"line":14,"column":10},"name":"listingNum"},{"generated":{"line":29,"column":36},"source":"property.js","original":{"line":14,"column":20}},{"generated":{"line":30,"column":14},"source":"property.js","original":{"line":15,"column":10},"name":"propertyStyle"},{"generated":{"line":30,"column":27},"source":"property.js","original":{"line":15,"column":23}},{"generated":{"line":30,"column":29},"source":"property.js","original":{"line":15,"column":10},"name":"propertyStyle"},{"generated":{"line":30,"column":42},"source":"property.js","original":{"line":15,"column":23}},{"generated":{"line":31,"column":14},"source":"property.js","original":{"line":16,"column":10},"name":"garageType"},{"generated":{"line":31,"column":24},"source":"property.js","original":{"line":16,"column":20}},{"generated":{"line":31,"column":26},"source":"property.js","original":{"line":16,"column":10},"name":"garageType"},{"generated":{"line":31,"column":36},"source":"property.js","original":{"line":16,"column":20}},{"generated":{"line":32,"column":14},"source":"property.js","original":{"line":17,"column":10},"name":"garageSize"},{"generated":{"line":32,"column":24},"source":"property.js","original":{"line":17,"column":20}},{"generated":{"line":32,"column":26},"source":"property.js","original":{"line":17,"column":10},"name":"garageSize"},{"generated":{"line":32,"column":36},"source":"property.js","original":{"line":17,"column":20}},{"generated":{"line":33,"column":14},"source":"property.js","original":{"line":18,"column":10},"name":"berRating"},{"generated":{"line":33,"column":23},"source":"property.js","original":{"line":18,"column":19}},{"generated":{"line":33,"column":25},"source":"property.js","original":{"line":18,"column":10},"name":"berRating"},{"generated":{"line":33,"column":34},"source":"property.js","original":{"line":18,"column":19}},{"generated":{"line":34,"column":14},"source":"property.js","original":{"line":19,"column":10},"name":"squareFeet"},{"generated":{"line":34,"column":24},"source":"property.js","original":{"line":19,"column":20}},{"generated":{"line":34,"column":26},"source":"property.js","original":{"line":19,"column":10},"name":"squareFeet"},{"generated":{"line":34,"column":36},"source":"property.js","original":{"line":19,"column":20}},{"generated":{"line":35,"column":14},"source":"property.js","original":{"line":20,"column":10},"name":"lotSize"},{"generated":{"line":35,"column":21},"source":"property.js","original":{"line":20,"column":17}},{"generated":{"line":35,"column":23},"source":"property.js","original":{"line":20,"column":10},"name":"lotSize"},{"generated":{"line":35,"column":30},"source":"property.js","original":{"line":20,"column":17}},{"generated":{"line":36,"column":14},"source":"property.js","original":{"line":21,"column":10},"name":"numBedroom"},{"generated":{"line":36,"column":24},"source":"property.js","original":{"line":21,"column":20}},{"generated":{"line":36,"column":26},"source":"property.js","original":{"line":21,"column":10},"name":"numBedroom"},{"generated":{"line":36,"column":36},"source":"property.js","original":{"line":21,"column":20}},{"generated":{"line":37,"column":14},"source":"property.js","original":{"line":22,"column":10},"name":"numBathroom"},{"generated":{"line":37,"column":25},"source":"property.js","original":{"line":22,"column":21}},{"generated":{"line":37,"column":27},"source":"property.js","original":{"line":22,"column":10},"name":"numBathroom"},{"generated":{"line":37,"column":38},"source":"property.js","original":{"line":22,"column":21}},{"generated":{"line":38,"column":14},"source":"property.js","original":{"line":23,"column":10},"name":"price"},{"generated":{"line":38,"column":19},"source":"property.js","original":{"line":23,"column":15}},{"generated":{"line":38,"column":21},"source":"property.js","original":{"line":23,"column":10},"name":"price"},{"generated":{"line":38,"column":26},"source":"property.js","original":{"line":23,"column":15}},{"generated":{"line":39,"column":14},"source":"property.js","original":{"line":24,"column":10},"name":"imageCover"},{"generated":{"line":39,"column":24},"source":"property.js","original":{"line":24,"column":20}},{"generated":{"line":39,"column":26},"source":"property.js","original":{"line":24,"column":10},"name":"imageCover"},{"generated":{"line":39,"column":36},"source":"property.js","original":{"line":24,"column":20}},{"generated":{"line":40,"column":14},"source":"property.js","original":{"line":25,"column":10},"name":"description"},{"generated":{"line":40,"column":25},"source":"property.js","original":{"line":25,"column":21}},{"generated":{"line":40,"column":27},"source":"property.js","original":{"line":25,"column":10},"name":"description"},{"generated":{"line":40,"column":38},"source":"property.js","original":{"line":25,"column":21}},{"generated":{"line":41,"column":14},"source":"property.js","original":{"line":26,"column":10},"name":"biddingPrice"},{"generated":{"line":41,"column":26},"source":"property.js","original":{"line":26,"column":22}},{"generated":{"line":41,"column":28},"source":"property.js","original":{"line":26,"column":10},"name":"biddingPrice"},{"generated":{"line":42,"column":12},"source":"property.js","original":{"line":27,"column":8}},{"generated":{"line":43,"column":10},"source":"property.js","original":{"line":28,"column":6}},{"generated":{"line":43,"column":11},"source":"property.js","original":{"line":28,"column":7}},{"generated":{"line":43,"column":12},"source":"property.js","original":{"line":28,"column":8}},{"generated":{"line":44,"column":8},"source":"property.js","original":{"line":28,"column":8}},{"generated":{"line":45,"column":10},"source":"property.js","original":{"line":8,"column":12},"name":"res"},{"generated":{"line":45,"column":13},"source":"property.js","original":{"line":8,"column":15}},{"generated":{"line":46,"column":10},"source":"property.js","original":{"line":30,"column":6}},{"generated":{"line":46,"column":14},"source":"property.js","original":{"line":30,"column":10},"name":"res"},{"generated":{"line":46,"column":17},"source":"property.js","original":{"line":30,"column":13}},{"generated":{"line":46,"column":18},"source":"property.js","original":{"line":30,"column":14},"name":"data"},{"generated":{"line":46,"column":22},"source":"property.js","original":{"line":30,"column":18}},{"generated":{"line":46,"column":23},"source":"property.js","original":{"line":30,"column":19},"name":"status"},{"generated":{"line":46,"column":29},"source":"property.js","original":{"line":30,"column":25}},{"generated":{"line":46,"column":34},"source":"property.js","original":{"line":30,"column":30}},{"generated":{"line":46,"column":43},"source":"property.js","original":{"line":30,"column":39}},{"generated":{"line":46,"column":45},"source":"property.js","original":{"line":30,"column":41}},{"generated":{"line":47,"column":12},"source":"property.js","original":{"line":31,"column":8}},{"generated":{"line":47,"column":16},"source":"property.js","original":{"line":31,"column":8},"name":"showAlert"},{"generated":{"line":47,"column":33},"source":"property.js","original":{"line":31,"column":17}},{"generated":{"line":47,"column":35},"source":"property.js","original":{"line":31,"column":18}},{"generated":{"line":47,"column":44},"source":"property.js","original":{"line":31,"column":27}},{"generated":{"line":47,"column":46},"source":"property.js","original":{"line":31,"column":29}},{"generated":{"line":47,"column":78},"source":"property.js","original":{"line":31,"column":61}},{"generated":{"line":47,"column":79},"source":"property.js","original":{"line":31,"column":62}},{"generated":{"line":48,"column":10},"source":"property.js","original":{"line":32,"column":6}},{"generated":{"line":49,"column":10},"source":"property.js","original":{"line":32,"column":7}},{"generated":{"line":50,"column":10},"source":"property.js","original":{"line":32,"column":7}},{"generated":{"line":51,"column":8},"source":"property.js","original":{"line":32,"column":7}},{"generated":{"line":52,"column":10},"source":"property.js","original":{"line":32,"column":7}},{"generated":{"line":53,"column":10},"source":"property.js","original":{"line":32,"column":7}},{"generated":{"line":54,"column":10},"source":"property.js","original":{"line":34,"column":6}},{"generated":{"line":54,"column":14},"source":"property.js","original":{"line":34,"column":6},"name":"showAlert"},{"generated":{"line":54,"column":31},"source":"property.js","original":{"line":34,"column":15}},{"generated":{"line":54,"column":33},"source":"property.js","original":{"line":34,"column":16}},{"generated":{"line":54,"column":40},"source":"property.js","original":{"line":34,"column":23}},{"generated":{"line":54,"column":42},"source":"property.js","original":{"line":34,"column":25}},{"generated":{"line":54,"column":54},"source":"property.js","original":{"line":34,"column":29},"name":"response"},{"generated":{"line":54,"column":62},"source":"property.js","original":{"line":34,"column":37}},{"generated":{"line":54,"column":63},"source":"property.js","original":{"line":34,"column":38},"name":"data"},{"generated":{"line":54,"column":67},"source":"property.js","original":{"line":34,"column":42}},{"generated":{"line":54,"column":68},"source":"property.js","original":{"line":34,"column":43},"name":"message"},{"generated":{"line":54,"column":75},"source":"property.js","original":{"line":34,"column":50}},{"generated":{"line":54,"column":76},"source":"property.js","original":{"line":34,"column":51}},{"generated":{"line":55,"column":10},"source":"property.js","original":{"line":35,"column":6},"name":"console"},{"generated":{"line":55,"column":17},"source":"property.js","original":{"line":35,"column":13}},{"generated":{"line":55,"column":18},"source":"property.js","original":{"line":35,"column":14},"name":"log"},{"generated":{"line":55,"column":21},"source":"property.js","original":{"line":35,"column":17}},{"generated":{"line":55,"column":34},"source":"property.js","original":{"line":35,"column":22}},{"generated":{"line":56,"column":8},"source":"property.js","original":{"line":35,"column":23}},{"generated":{"line":57,"column":8},"source":"property.js","original":{"line":35,"column":23}},{"generated":{"line":58,"column":10},"source":"property.js","original":{"line":35,"column":23}},{"generated":{"line":59,"column":6},"source":"property.js","original":{"line":35,"column":23}},{"generated":{"line":60,"column":4},"source":"property.js","original":{"line":35,"column":23}},{"generated":{"line":61,"column":2},"source":"property.js","original":{"line":35,"column":23}},{"generated":{"line":61,"column":3},"source":"property.js","original":{"line":37,"column":3}},{"generated":{"line":62,"column":2},"source":"property.js","original":{"line":37,"column":3}},{"generated":{"line":62,"column":18},"source":"property.js","original":{"line":6,"column":13},"name":"createProperty"},{"generated":{"line":62,"column":32},"source":"property.js","original":{"line":6,"column":27}},{"generated":{"line":63,"column":4},"source":"property.js","original":{"line":6,"column":27}},{"generated":{"line":64,"column":2},"source":"property.js","original":{"line":6,"column":27}},{"generated":{"line":65,"column":0},"source":"property.js","original":{"line":6,"column":27}},{"generated":{"line":65,"column":3},"source":"property.js","original":{"line":37,"column":3}},{"generated":{"line":66,"column":0},"source":"property.js","original":{"line":37,"column":4}},{"generated":{"line":67,"column":0},"source":"property.js","original":{"line":39,"column":7}},{"generated":{"line":67,"column":4},"source":"property.js","original":{"line":39,"column":13},"name":"getProperty"},{"generated":{"line":67,"column":15},"source":"property.js","original":{"line":39,"column":24}},{"generated":{"line":68,"column":2},"source":"property.js","original":{"line":39,"column":24}},{"generated":{"line":68,"column":73},"source":"property.js","original":{"line":39,"column":27}},{"generated":{"line":68,"column":91},"source":"property.js","original":{"line":39,"column":34},"name":"propertyId"},{"generated":{"line":68,"column":101},"source":"property.js","original":{"line":39,"column":44}},{"generated":{"line":69,"column":4},"source":"property.js","original":{"line":39,"column":44}},{"generated":{"line":70,"column":4},"source":"property.js","original":{"line":39,"column":44}},{"generated":{"line":71,"column":6},"source":"property.js","original":{"line":39,"column":44}},{"generated":{"line":72,"column":8},"source":"property.js","original":{"line":39,"column":44}},{"generated":{"line":73,"column":10},"source":"property.js","original":{"line":39,"column":44}},{"generated":{"line":74,"column":10},"source":"property.js","original":{"line":39,"column":44}},{"generated":{"line":75,"column":10},"source":"property.js","original":{"line":39,"column":44}},{"generated":{"line":75,"column":17},"source":"property.js","original":{"line":41,"column":20}},{"generated":{"line":75,"column":21},"source":"property.js","original":{"line":41,"column":20},"name":"axios"},{"generated":{"line":75,"column":35},"source":"property.js","original":{"line":41,"column":25}},{"generated":{"line":75,"column":37},"source":"property.js","original":{"line":41,"column":26}},{"generated":{"line":76,"column":12},"source":"property.js","original":{"line":42,"column":4},"name":"method"},{"generated":{"line":76,"column":18},"source":"property.js","original":{"line":42,"column":10}},{"generated":{"line":76,"column":20},"source":"property.js","original":{"line":42,"column":12}},{"generated":{"line":76,"column":25},"source":"property.js","original":{"line":42,"column":17}},{"generated":{"line":77,"column":12},"source":"property.js","original":{"line":43,"column":4},"name":"url"},{"generated":{"line":77,"column":15},"source":"property.js","original":{"line":43,"column":7}},{"generated":{"line":77,"column":67},"source":"property.js","original":{"line":43,"column":52},"name":"propertyId"},{"generated":{"line":77,"column":77},"source":"property.js","original":{"line":43,"column":62}},{"generated":{"line":78,"column":10},"source":"property.js","original":{"line":44,"column":2}},{"generated":{"line":78,"column":11},"source":"property.js","original":{"line":44,"column":3}},{"generated":{"line":78,"column":12},"source":"property.js","original":{"line":44,"column":4}},{"generated":{"line":79,"column":8},"source":"property.js","original":{"line":44,"column":4}},{"generated":{"line":80,"column":10},"source":"property.js","original":{"line":41,"column":8},"name":"res"},{"generated":{"line":80,"column":13},"source":"property.js","original":{"line":41,"column":11}},{"generated":{"line":81,"column":10},"source":"property.js","original":{"line":41,"column":11}},{"generated":{"line":81,"column":16},"source":"property.js","original":{"line":46,"column":5},"name":"res"},{"generated":{"line":81,"column":19},"source":"property.js","original":{"line":46,"column":8}},{"generated":{"line":81,"column":20},"source":"property.js","original":{"line":46,"column":9},"name":"data"},{"generated":{"line":81,"column":24},"source":"property.js","original":{"line":46,"column":13}},{"generated":{"line":81,"column":25},"source":"property.js","original":{"line":46,"column":14},"name":"status"},{"generated":{"line":81,"column":31},"source":"property.js","original":{"line":46,"column":20}},{"generated":{"line":81,"column":36},"source":"property.js","original":{"line":46,"column":25}},{"generated":{"line":81,"column":45},"source":"property.js","original":{"line":46,"column":34}},{"generated":{"line":82,"column":12},"source":"property.js","original":{"line":46,"column":34}},{"generated":{"line":83,"column":12},"source":"property.js","original":{"line":46,"column":34}},{"generated":{"line":84,"column":10},"source":"property.js","original":{"line":46,"column":34}},{"generated":{"line":85,"column":10},"source":"property.js","original":{"line":46,"column":34}},{"generated":{"line":85,"column":44},"source":"property.js","original":{"line":47,"column":11},"name":"res"},{"generated":{"line":85,"column":47},"source":"property.js","original":{"line":47,"column":14}},{"generated":{"line":85,"column":48},"source":"property.js","original":{"line":47,"column":15},"name":"data"},{"generated":{"line":85,"column":52},"source":"property.js","original":{"line":47,"column":19}},{"generated":{"line":85,"column":53},"source":"property.js","original":{"line":47,"column":20},"name":"data"},{"generated":{"line":85,"column":57},"source":"property.js","original":{"line":47,"column":24}},{"generated":{"line":86,"column":8},"source":"property.js","original":{"line":47,"column":24}},{"generated":{"line":87,"column":10},"source":"property.js","original":{"line":47,"column":24}},{"generated":{"line":88,"column":10},"source":"property.js","original":{"line":47,"column":24}},{"generated":{"line":89,"column":8},"source":"property.js","original":{"line":47,"column":24}},{"generated":{"line":90,"column":10},"source":"property.js","original":{"line":47,"column":24}},{"generated":{"line":91,"column":10},"source":"property.js","original":{"line":47,"column":24}},{"generated":{"line":92,"column":10},"source":"property.js","original":{"line":50,"column":2}},{"generated":{"line":92,"column":14},"source":"property.js","original":{"line":50,"column":2},"name":"showAlert"},{"generated":{"line":92,"column":31},"source":"property.js","original":{"line":50,"column":11}},{"generated":{"line":92,"column":33},"source":"property.js","original":{"line":50,"column":12}},{"generated":{"line":92,"column":40},"source":"property.js","original":{"line":50,"column":19}},{"generated":{"line":92,"column":42},"source":"property.js","original":{"line":50,"column":21}},{"generated":{"line":92,"column":55},"source":"property.js","original":{"line":50,"column":25},"name":"response"},{"generated":{"line":92,"column":63},"source":"property.js","original":{"line":50,"column":33}},{"generated":{"line":92,"column":64},"source":"property.js","original":{"line":50,"column":34},"name":"data"},{"generated":{"line":92,"column":68},"source":"property.js","original":{"line":50,"column":38}},{"generated":{"line":92,"column":69},"source":"property.js","original":{"line":50,"column":39},"name":"message"},{"generated":{"line":92,"column":76},"source":"property.js","original":{"line":50,"column":46}},{"generated":{"line":92,"column":77},"source":"property.js","original":{"line":50,"column":47}},{"generated":{"line":93,"column":8},"source":"property.js","original":{"line":50,"column":48}},{"generated":{"line":94,"column":8},"source":"property.js","original":{"line":50,"column":48}},{"generated":{"line":95,"column":10},"source":"property.js","original":{"line":50,"column":48}},{"generated":{"line":96,"column":6},"source":"property.js","original":{"line":50,"column":48}},{"generated":{"line":97,"column":4},"source":"property.js","original":{"line":50,"column":48}},{"generated":{"line":98,"column":2},"source":"property.js","original":{"line":50,"column":48}},{"generated":{"line":98,"column":3},"source":"property.js","original":{"line":52,"column":1}},{"generated":{"line":99,"column":2},"source":"property.js","original":{"line":52,"column":1}},{"generated":{"line":99,"column":18},"source":"property.js","original":{"line":39,"column":13},"name":"getProperty"},{"generated":{"line":99,"column":29},"source":"property.js","original":{"line":39,"column":24}},{"generated":{"line":100,"column":4},"source":"property.js","original":{"line":39,"column":24}},{"generated":{"line":101,"column":2},"source":"property.js","original":{"line":39,"column":24}},{"generated":{"line":102,"column":0},"source":"property.js","original":{"line":39,"column":24}},{"generated":{"line":102,"column":3},"source":"property.js","original":{"line":52,"column":1}},{"generated":{"line":103,"column":0},"source":"property.js","original":{"line":52,"column":2}},{"generated":{"line":104,"column":0},"source":"property.js","original":{"line":54,"column":7}},{"generated":{"line":104,"column":4},"source":"property.js","original":{"line":54,"column":13},"name":"soldProperty"},{"generated":{"line":104,"column":16},"source":"property.js","original":{"line":54,"column":25}},{"generated":{"line":104,"column":19},"source":"property.js","original":{"line":54,"column":28}},{"generated":{"line":104,"column":23},"source":"property.js","original":{"line":54,"column":28},"name":"catchAsync"},{"generated":{"line":104,"column":42},"source":"property.js","original":{"line":54,"column":38}},{"generated":{"line":105,"column":2},"source":"property.js","original":{"line":54,"column":38}},{"generated":{"line":105,"column":73},"source":"property.js","original":{"line":54,"column":39}},{"generated":{"line":105,"column":91},"source":"property.js","original":{"line":54,"column":46},"name":"propertyAddress"},{"generated":{"line":105,"column":106},"source":"property.js","original":{"line":54,"column":61}},{"generated":{"line":106,"column":4},"source":"property.js","original":{"line":54,"column":61}},{"generated":{"line":107,"column":4},"source":"property.js","original":{"line":54,"column":61}},{"generated":{"line":108,"column":6},"source":"property.js","original":{"line":54,"column":61}},{"generated":{"line":109,"column":8},"source":"property.js","original":{"line":54,"column":61}},{"generated":{"line":110,"column":10},"source":"property.js","original":{"line":54,"column":61}},{"generated":{"line":111,"column":10},"source":"property.js","original":{"line":54,"column":61}},{"generated":{"line":112,"column":10},"source":"property.js","original":{"line":54,"column":61}},{"generated":{"line":112,"column":17},"source":"property.js","original":{"line":56,"column":22}},{"generated":{"line":112,"column":21},"source":"property.js","original":{"line":56,"column":22},"name":"axios"},{"generated":{"line":112,"column":35},"source":"property.js","original":{"line":56,"column":27}},{"generated":{"line":112,"column":37},"source":"property.js","original":{"line":56,"column":28}},{"generated":{"line":113,"column":12},"source":"property.js","original":{"line":57,"column":6},"name":"method"},{"generated":{"line":113,"column":18},"source":"property.js","original":{"line":57,"column":12}},{"generated":{"line":113,"column":20},"source":"property.js","original":{"line":57,"column":14}},{"generated":{"line":113,"column":26},"source":"property.js","original":{"line":57,"column":20}},{"generated":{"line":114,"column":12},"source":"property.js","original":{"line":58,"column":6},"name":"url"},{"generated":{"line":114,"column":15},"source":"property.js","original":{"line":58,"column":9}},{"generated":{"line":114,"column":17},"source":"property.js","original":{"line":58,"column":11}},{"generated":{"line":114,"column":71},"source":"property.js","original":{"line":58,"column":65}},{"generated":{"line":115,"column":12},"source":"property.js","original":{"line":59,"column":6},"name":"data"},{"generated":{"line":115,"column":16},"source":"property.js","original":{"line":59,"column":10}},{"generated":{"line":115,"column":18},"source":"property.js","original":{"line":59,"column":12}},{"generated":{"line":116,"column":14},"source":"property.js","original":{"line":60,"column":8},"name":"address"},{"generated":{"line":116,"column":21},"source":"property.js","original":{"line":60,"column":15}},{"generated":{"line":116,"column":23},"source":"property.js","original":{"line":60,"column":17},"name":"propertyAddress"},{"generated":{"line":117,"column":12},"source":"property.js","original":{"line":61,"column":6}},{"generated":{"line":118,"column":10},"source":"property.js","original":{"line":62,"column":4}},{"generated":{"line":118,"column":11},"source":"property.js","original":{"line":62,"column":5}},{"generated":{"line":118,"column":12},"source":"property.js","original":{"line":62,"column":6}},{"generated":{"line":119,"column":8},"source":"property.js","original":{"line":62,"column":6}},{"generated":{"line":120,"column":10},"source":"property.js","original":{"line":56,"column":10},"name":"res"},{"generated":{"line":120,"column":13},"source":"property.js","original":{"line":56,"column":13}},{"generated":{"line":121,"column":10},"source":"property.js","original":{"line":64,"column":4}},{"generated":{"line":121,"column":14},"source":"property.js","original":{"line":64,"column":8},"name":"res"},{"generated":{"line":121,"column":17},"source":"property.js","original":{"line":64,"column":11}},{"generated":{"line":121,"column":18},"source":"property.js","original":{"line":64,"column":12},"name":"data"},{"generated":{"line":121,"column":22},"source":"property.js","original":{"line":64,"column":16}},{"generated":{"line":121,"column":23},"source":"property.js","original":{"line":64,"column":17},"name":"status"},{"generated":{"line":121,"column":29},"source":"property.js","original":{"line":64,"column":23}},{"generated":{"line":121,"column":34},"source":"property.js","original":{"line":64,"column":28}},{"generated":{"line":121,"column":43},"source":"property.js","original":{"line":64,"column":37}},{"generated":{"line":121,"column":45},"source":"property.js","original":{"line":64,"column":39}},{"generated":{"line":122,"column":12},"source":"property.js","original":{"line":65,"column":6}},{"generated":{"line":122,"column":16},"source":"property.js","original":{"line":65,"column":6},"name":"showAlert"},{"generated":{"line":122,"column":33},"source":"property.js","original":{"line":65,"column":15}},{"generated":{"line":122,"column":35},"source":"property.js","original":{"line":65,"column":16}},{"generated":{"line":122,"column":44},"source":"property.js","original":{"line":65,"column":25}},{"generated":{"line":122,"column":46},"source":"property.js","original":{"line":65,"column":27}},{"generated":{"line":122,"column":62},"source":"property.js","original":{"line":65,"column":43}},{"generated":{"line":122,"column":63},"source":"property.js","original":{"line":65,"column":44}},{"generated":{"line":123,"column":12},"source":"property.js","original":{"line":66,"column":6},"name":"window"},{"generated":{"line":123,"column":18},"source":"property.js","original":{"line":66,"column":12}},{"generated":{"line":123,"column":19},"source":"property.js","original":{"line":66,"column":13},"name":"setTimeout"},{"generated":{"line":123,"column":29},"source":"property.js","original":{"line":66,"column":23}},{"generated":{"line":123,"column":30},"source":"property.js","original":{"line":66,"column":24}},{"generated":{"line":123,"column":42},"source":"property.js","original":{"line":66,"column":30}},{"generated":{"line":124,"column":14},"source":"property.js","original":{"line":67,"column":8},"name":"location"},{"generated":{"line":124,"column":22},"source":"property.js","original":{"line":67,"column":16}},{"generated":{"line":124,"column":23},"source":"property.js","original":{"line":67,"column":17},"name":"assign"},{"generated":{"line":124,"column":29},"source":"property.js","original":{"line":67,"column":23}},{"generated":{"line":124,"column":30},"source":"property.js","original":{"line":67,"column":24}},{"generated":{"line":124,"column":33},"source":"property.js","original":{"line":67,"column":27}},{"generated":{"line":124,"column":34},"source":"property.js","original":{"line":67,"column":28}},{"generated":{"line":125,"column":12},"source":"property.js","original":{"line":68,"column":6}},{"generated":{"line":125,"column":13},"source":"property.js","original":{"line":68,"column":7}},{"generated":{"line":125,"column":15},"source":"property.js","original":{"line":68,"column":9}},{"generated":{"line":125,"column":19},"source":"property.js","original":{"line":68,"column":13}},{"generated":{"line":125,"column":20},"source":"property.js","original":{"line":68,"column":14}},{"generated":{"line":126,"column":10},"source":"property.js","original":{"line":69,"column":4}},{"generated":{"line":127,"column":10},"source":"property.js","original":{"line":69,"column":5}},{"generated":{"line":128,"column":10},"source":"property.js","original":{"line":69,"column":5}},{"generated":{"line":129,"column":8},"source":"property.js","original":{"line":69,"column":5}},{"generated":{"line":130,"column":10},"source":"property.js","original":{"line":69,"column":5}},{"generated":{"line":131,"column":10},"source":"property.js","original":{"line":69,"column":5}},{"generated":{"line":132,"column":10},"source":"property.js","original":{"line":71,"column":4}},{"generated":{"line":132,"column":14},"source":"property.js","original":{"line":71,"column":4},"name":"showAlert"},{"generated":{"line":132,"column":31},"source":"property.js","original":{"line":71,"column":13}},{"generated":{"line":132,"column":33},"source":"property.js","original":{"line":71,"column":14}},{"generated":{"line":132,"column":40},"source":"property.js","original":{"line":71,"column":21}},{"generated":{"line":132,"column":55},"source":"property.js","original":{"line":71,"column":27}},{"generated":{"line":133,"column":8},"source":"property.js","original":{"line":71,"column":28}},{"generated":{"line":134,"column":8},"source":"property.js","original":{"line":71,"column":28}},{"generated":{"line":135,"column":10},"source":"property.js","original":{"line":71,"column":28}},{"generated":{"line":136,"column":6},"source":"property.js","original":{"line":71,"column":28}},{"generated":{"line":137,"column":4},"source":"property.js","original":{"line":71,"column":28}},{"generated":{"line":138,"column":2},"source":"property.js","original":{"line":71,"column":28}},{"generated":{"line":138,"column":3},"source":"property.js","original":{"line":73,"column":1}},{"generated":{"line":139,"column":2},"source":"property.js","original":{"line":73,"column":1}},{"generated":{"line":140,"column":4},"source":"property.js","original":{"line":73,"column":1}},{"generated":{"line":141,"column":2},"source":"property.js","original":{"line":73,"column":1}},{"generated":{"line":142,"column":0},"source":"property.js","original":{"line":73,"column":1}},{"generated":{"line":142,"column":4},"source":"property.js","original":{"line":73,"column":2}},{"generated":{"line":143,"column":0},"source":"property.js","original":{"line":73,"column":3}},{"generated":{"line":144,"column":0},"source":"property.js","original":{"line":75,"column":7}},{"generated":{"line":144,"column":4},"source":"property.js","original":{"line":75,"column":13},"name":"placeBid"},{"generated":{"line":144,"column":12},"source":"property.js","original":{"line":75,"column":21}},{"generated":{"line":144,"column":15},"source":"property.js","original":{"line":75,"column":24}},{"generated":{"line":144,"column":19},"source":"property.js","original":{"line":75,"column":24},"name":"catchAsync"},{"generated":{"line":144,"column":38},"source":"property.js","original":{"line":75,"column":34}},{"generated":{"line":145,"column":2},"source":"property.js","original":{"line":75,"column":34}},{"generated":{"line":145,"column":73},"source":"property.js","original":{"line":75,"column":35}},{"generated":{"line":145,"column":91},"source":"property.js","original":{"line":75,"column":42},"name":"propertyAddress"},{"generated":{"line":145,"column":106},"source":"property.js","original":{"line":75,"column":57}},{"generated":{"line":145,"column":108},"source":"property.js","original":{"line":75,"column":59},"name":"newBidPrice"},{"generated":{"line":145,"column":119},"source":"property.js","original":{"line":75,"column":70}},{"generated":{"line":145,"column":121},"source":"property.js","original":{"line":75,"column":72},"name":"curBidder"},{"generated":{"line":145,"column":130},"source":"property.js","original":{"line":75,"column":81}},{"generated":{"line":146,"column":4},"source":"property.js","original":{"line":75,"column":81}},{"generated":{"line":147,"column":4},"source":"property.js","original":{"line":75,"column":81}},{"generated":{"line":148,"column":6},"source":"property.js","original":{"line":75,"column":81}},{"generated":{"line":149,"column":8},"source":"property.js","original":{"line":75,"column":81}},{"generated":{"line":150,"column":10},"source":"property.js","original":{"line":75,"column":81}},{"generated":{"line":151,"column":10},"source":"property.js","original":{"line":75,"column":81}},{"generated":{"line":152,"column":10},"source":"property.js","original":{"line":75,"column":81}},{"generated":{"line":152,"column":17},"source":"property.js","original":{"line":77,"column":22}},{"generated":{"line":152,"column":21},"source":"property.js","original":{"line":77,"column":22},"name":"axios"},{"generated":{"line":152,"column":35},"source":"property.js","original":{"line":77,"column":27}},{"generated":{"line":152,"column":37},"source":"property.js","original":{"line":77,"column":28}},{"generated":{"line":153,"column":12},"source":"property.js","original":{"line":78,"column":6},"name":"method"},{"generated":{"line":153,"column":18},"source":"property.js","original":{"line":78,"column":12}},{"generated":{"line":153,"column":20},"source":"property.js","original":{"line":78,"column":14}},{"generated":{"line":153,"column":26},"source":"property.js","original":{"line":78,"column":20}},{"generated":{"line":154,"column":12},"source":"property.js","original":{"line":79,"column":6},"name":"url"},{"generated":{"line":154,"column":15},"source":"property.js","original":{"line":79,"column":9}},{"generated":{"line":154,"column":17},"source":"property.js","original":{"line":79,"column":11}},{"generated":{"line":154,"column":67},"source":"property.js","original":{"line":79,"column":61}},{"generated":{"line":155,"column":12},"source":"property.js","original":{"line":80,"column":6},"name":"data"},{"generated":{"line":155,"column":16},"source":"property.js","original":{"line":80,"column":10}},{"generated":{"line":155,"column":18},"source":"property.js","original":{"line":80,"column":12}},{"generated":{"line":156,"column":14},"source":"property.js","original":{"line":81,"column":8},"name":"address"},{"generated":{"line":156,"column":21},"source":"property.js","original":{"line":81,"column":15}},{"generated":{"line":156,"column":23},"source":"property.js","original":{"line":81,"column":17},"name":"propertyAddress"},{"generated":{"line":156,"column":38},"source":"property.js","original":{"line":81,"column":32}},{"generated":{"line":157,"column":14},"source":"property.js","original":{"line":82,"column":8},"name":"biddingPrice"},{"generated":{"line":157,"column":26},"source":"property.js","original":{"line":82,"column":20}},{"generated":{"line":157,"column":28},"source":"property.js","original":{"line":82,"column":22},"name":"newBidPrice"},{"generated":{"line":157,"column":39},"source":"property.js","original":{"line":82,"column":33}},{"generated":{"line":158,"column":14},"source":"property.js","original":{"line":83,"column":8},"name":"bidder"},{"generated":{"line":158,"column":20},"source":"property.js","original":{"line":83,"column":14}},{"generated":{"line":158,"column":22},"source":"property.js","original":{"line":83,"column":16},"name":"curBidder"},{"generated":{"line":159,"column":12},"source":"property.js","original":{"line":84,"column":6}},{"generated":{"line":160,"column":10},"source":"property.js","original":{"line":85,"column":4}},{"generated":{"line":160,"column":11},"source":"property.js","original":{"line":85,"column":5}},{"generated":{"line":160,"column":12},"source":"property.js","original":{"line":85,"column":6}},{"generated":{"line":161,"column":8},"source":"property.js","original":{"line":85,"column":6}},{"generated":{"line":162,"column":10},"source":"property.js","original":{"line":77,"column":10},"name":"res"},{"generated":{"line":162,"column":13},"source":"property.js","original":{"line":77,"column":13}},{"generated":{"line":163,"column":10},"source":"property.js","original":{"line":87,"column":4}},{"generated":{"line":163,"column":14},"source":"property.js","original":{"line":87,"column":8},"name":"res"},{"generated":{"line":163,"column":17},"source":"property.js","original":{"line":87,"column":11}},{"generated":{"line":163,"column":18},"source":"property.js","original":{"line":87,"column":12},"name":"data"},{"generated":{"line":163,"column":22},"source":"property.js","original":{"line":87,"column":16}},{"generated":{"line":163,"column":23},"source":"property.js","original":{"line":87,"column":17},"name":"status"},{"generated":{"line":163,"column":29},"source":"property.js","original":{"line":87,"column":23}},{"generated":{"line":163,"column":34},"source":"property.js","original":{"line":87,"column":28}},{"generated":{"line":163,"column":43},"source":"property.js","original":{"line":87,"column":37}},{"generated":{"line":163,"column":45},"source":"property.js","original":{"line":87,"column":39}},{"generated":{"line":164,"column":12},"source":"property.js","original":{"line":88,"column":6}},{"generated":{"line":164,"column":16},"source":"property.js","original":{"line":88,"column":6},"name":"showAlert"},{"generated":{"line":164,"column":33},"source":"property.js","original":{"line":88,"column":15}},{"generated":{"line":164,"column":35},"source":"property.js","original":{"line":88,"column":16}},{"generated":{"line":164,"column":44},"source":"property.js","original":{"line":88,"column":25}},{"generated":{"line":164,"column":46},"source":"property.js","original":{"line":88,"column":27}},{"generated":{"line":164,"column":65},"source":"property.js","original":{"line":88,"column":46}},{"generated":{"line":164,"column":66},"source":"property.js","original":{"line":88,"column":47}},{"generated":{"line":165,"column":12},"source":"property.js","original":{"line":89,"column":6},"name":"setTimeout"},{"generated":{"line":165,"column":22},"source":"property.js","original":{"line":89,"column":16}},{"generated":{"line":165,"column":23},"source":"property.js","original":{"line":89,"column":17}},{"generated":{"line":165,"column":35},"source":"property.js","original":{"line":89,"column":23}},{"generated":{"line":166,"column":14},"source":"property.js","original":{"line":90,"column":8},"name":"document"},{"generated":{"line":166,"column":22},"source":"property.js","original":{"line":90,"column":16}},{"generated":{"line":166,"column":23},"source":"property.js","original":{"line":90,"column":17},"name":"location"},{"generated":{"line":166,"column":31},"source":"property.js","original":{"line":90,"column":25}},{"generated":{"line":166,"column":32},"source":"property.js","original":{"line":90,"column":26},"name":"reload"},{"generated":{"line":166,"column":38},"source":"property.js","original":{"line":90,"column":32}},{"generated":{"line":166,"column":40},"source":"property.js","original":{"line":90,"column":34}},{"generated":{"line":167,"column":12},"source":"property.js","original":{"line":91,"column":6}},{"generated":{"line":167,"column":13},"source":"property.js","original":{"line":91,"column":7}},{"generated":{"line":167,"column":15},"source":"property.js","original":{"line":91,"column":9}},{"generated":{"line":167,"column":19},"source":"property.js","original":{"line":91,"column":13}},{"generated":{"line":167,"column":20},"source":"property.js","original":{"line":91,"column":14}},{"generated":{"line":168,"column":10},"source":"property.js","original":{"line":92,"column":4}},{"generated":{"line":169,"column":10},"source":"property.js","original":{"line":92,"column":5}},{"generated":{"line":170,"column":10},"source":"property.js","original":{"line":92,"column":5}},{"generated":{"line":171,"column":8},"source":"property.js","original":{"line":92,"column":5}},{"generated":{"line":172,"column":10},"source":"property.js","original":{"line":92,"column":5}},{"generated":{"line":173,"column":10},"source":"property.js","original":{"line":92,"column":5}},{"generated":{"line":174,"column":10},"source":"property.js","original":{"line":94,"column":4},"name":"console"},{"generated":{"line":174,"column":17},"source":"property.js","original":{"line":94,"column":11}},{"generated":{"line":174,"column":18},"source":"property.js","original":{"line":94,"column":12},"name":"log"},{"generated":{"line":174,"column":21},"source":"property.js","original":{"line":94,"column":15}},{"generated":{"line":174,"column":35},"source":"property.js","original":{"line":94,"column":20}},{"generated":{"line":175,"column":10},"source":"property.js","original":{"line":95,"column":4}},{"generated":{"line":175,"column":14},"source":"property.js","original":{"line":95,"column":4},"name":"showAlert"},{"generated":{"line":175,"column":31},"source":"property.js","original":{"line":95,"column":13}},{"generated":{"line":175,"column":33},"source":"property.js","original":{"line":95,"column":14}},{"generated":{"line":175,"column":40},"source":"property.js","original":{"line":95,"column":21}},{"generated":{"line":175,"column":55},"source":"property.js","original":{"line":95,"column":27}},{"generated":{"line":176,"column":8},"source":"property.js","original":{"line":95,"column":28}},{"generated":{"line":177,"column":8},"source":"property.js","original":{"line":95,"column":28}},{"generated":{"line":178,"column":10},"source":"property.js","original":{"line":95,"column":28}},{"generated":{"line":179,"column":6},"source":"property.js","original":{"line":95,"column":28}},{"generated":{"line":180,"column":4},"source":"property.js","original":{"line":95,"column":28}},{"generated":{"line":181,"column":2},"source":"property.js","original":{"line":95,"column":28}},{"generated":{"line":181,"column":3},"source":"property.js","original":{"line":97,"column":1}},{"generated":{"line":182,"column":2},"source":"property.js","original":{"line":97,"column":1}},{"generated":{"line":183,"column":4},"source":"property.js","original":{"line":97,"column":1}},{"generated":{"line":184,"column":2},"source":"property.js","original":{"line":97,"column":1}},{"generated":{"line":185,"column":0},"source":"property.js","original":{"line":97,"column":1}},{"generated":{"line":185,"column":4},"source":"property.js","original":{"line":97,"column":2}},{"generated":{"line":186,"column":0},"source":"property.js","original":{"line":97,"column":3}},{"generated":{"line":187,"column":0},"source":"property.js","original":{"line":99,"column":7}},{"generated":{"line":187,"column":4},"source":"property.js","original":{"line":99,"column":13},"name":"addView"},{"generated":{"line":187,"column":11},"source":"property.js","original":{"line":99,"column":20}},{"generated":{"line":187,"column":14},"source":"property.js","original":{"line":99,"column":23}},{"generated":{"line":187,"column":18},"source":"property.js","original":{"line":99,"column":23},"name":"catchAsync"},{"generated":{"line":187,"column":37},"source":"property.js","original":{"line":99,"column":33}},{"generated":{"line":188,"column":2},"source":"property.js","original":{"line":99,"column":33}},{"generated":{"line":188,"column":73},"source":"property.js","original":{"line":99,"column":34}},{"generated":{"line":188,"column":91},"source":"property.js","original":{"line":99,"column":41},"name":"propertyAddress"},{"generated":{"line":188,"column":106},"source":"property.js","original":{"line":99,"column":56}},{"generated":{"line":189,"column":4},"source":"property.js","original":{"line":99,"column":56}},{"generated":{"line":190,"column":4},"source":"property.js","original":{"line":99,"column":56}},{"generated":{"line":191,"column":6},"source":"property.js","original":{"line":99,"column":56}},{"generated":{"line":192,"column":8},"source":"property.js","original":{"line":99,"column":56}},{"generated":{"line":193,"column":10},"source":"property.js","original":{"line":99,"column":56}},{"generated":{"line":194,"column":10},"source":"property.js","original":{"line":99,"column":56}},{"generated":{"line":195,"column":10},"source":"property.js","original":{"line":99,"column":56}},{"generated":{"line":195,"column":17},"source":"property.js","original":{"line":101,"column":22}},{"generated":{"line":195,"column":21},"source":"property.js","original":{"line":101,"column":22},"name":"axios"},{"generated":{"line":195,"column":35},"source":"property.js","original":{"line":101,"column":27}},{"generated":{"line":195,"column":37},"source":"property.js","original":{"line":101,"column":28}},{"generated":{"line":196,"column":12},"source":"property.js","original":{"line":102,"column":6},"name":"method"},{"generated":{"line":196,"column":18},"source":"property.js","original":{"line":102,"column":12}},{"generated":{"line":196,"column":20},"source":"property.js","original":{"line":102,"column":14}},{"generated":{"line":196,"column":26},"source":"property.js","original":{"line":102,"column":20}},{"generated":{"line":197,"column":12},"source":"property.js","original":{"line":103,"column":6},"name":"url"},{"generated":{"line":197,"column":15},"source":"property.js","original":{"line":103,"column":9}},{"generated":{"line":197,"column":17},"source":"property.js","original":{"line":103,"column":11}},{"generated":{"line":197,"column":66},"source":"property.js","original":{"line":103,"column":60}},{"generated":{"line":198,"column":12},"source":"property.js","original":{"line":104,"column":6},"name":"data"},{"generated":{"line":198,"column":16},"source":"property.js","original":{"line":104,"column":10}},{"generated":{"line":198,"column":18},"source":"property.js","original":{"line":104,"column":12}},{"generated":{"line":199,"column":14},"source":"property.js","original":{"line":105,"column":8},"name":"address"},{"generated":{"line":199,"column":21},"source":"property.js","original":{"line":105,"column":15}},{"generated":{"line":199,"column":23},"source":"property.js","original":{"line":105,"column":17},"name":"propertyAddress"},{"generated":{"line":200,"column":12},"source":"property.js","original":{"line":106,"column":6}},{"generated":{"line":201,"column":10},"source":"property.js","original":{"line":107,"column":4}},{"generated":{"line":201,"column":11},"source":"property.js","original":{"line":107,"column":5}},{"generated":{"line":201,"column":12},"source":"property.js","original":{"line":107,"column":6}},{"generated":{"line":202,"column":8},"source":"property.js","original":{"line":107,"column":6}},{"generated":{"line":203,"column":10},"source":"property.js","original":{"line":101,"column":10},"name":"res"},{"generated":{"line":203,"column":13},"source":"property.js","original":{"line":101,"column":13}},{"generated":{"line":204,"column":10},"source":"property.js","original":{"line":109,"column":4}},{"generated":{"line":204,"column":14},"source":"property.js","original":{"line":109,"column":8},"name":"res"},{"generated":{"line":204,"column":17},"source":"property.js","original":{"line":109,"column":11}},{"generated":{"line":204,"column":18},"source":"property.js","original":{"line":109,"column":12},"name":"data"},{"generated":{"line":204,"column":22},"source":"property.js","original":{"line":109,"column":16}},{"generated":{"line":204,"column":23},"source":"property.js","original":{"line":109,"column":17},"name":"status"},{"generated":{"line":204,"column":29},"source":"property.js","original":{"line":109,"column":23}},{"generated":{"line":204,"column":34},"source":"property.js","original":{"line":109,"column":28}},{"generated":{"line":204,"column":43},"source":"property.js","original":{"line":109,"column":37}},{"generated":{"line":204,"column":45},"source":"property.js","original":{"line":109,"column":39}},{"generated":{"line":205,"column":12},"source":"property.js","original":{"line":110,"column":6},"name":"console"},{"generated":{"line":205,"column":19},"source":"property.js","original":{"line":110,"column":13}},{"generated":{"line":205,"column":20},"source":"property.js","original":{"line":110,"column":14},"name":"log"},{"generated":{"line":205,"column":23},"source":"property.js","original":{"line":110,"column":17}},{"generated":{"line":205,"column":24},"source":"property.js","original":{"line":110,"column":18}},{"generated":{"line":205,"column":38},"source":"property.js","original":{"line":110,"column":32}},{"generated":{"line":205,"column":39},"source":"property.js","original":{"line":110,"column":33}},{"generated":{"line":206,"column":10},"source":"property.js","original":{"line":111,"column":4}},{"generated":{"line":207,"column":10},"source":"property.js","original":{"line":111,"column":5}},{"generated":{"line":208,"column":10},"source":"property.js","original":{"line":111,"column":5}},{"generated":{"line":209,"column":8},"source":"property.js","original":{"line":111,"column":5}},{"generated":{"line":210,"column":10},"source":"property.js","original":{"line":111,"column":5}},{"generated":{"line":211,"column":10},"source":"property.js","original":{"line":111,"column":5}},{"generated":{"line":212,"column":10},"source":"property.js","original":{"line":113,"column":4}},{"generated":{"line":212,"column":14},"source":"property.js","original":{"line":113,"column":4},"name":"showAlert"},{"generated":{"line":212,"column":31},"source":"property.js","original":{"line":113,"column":13}},{"generated":{"line":212,"column":33},"source":"property.js","original":{"line":113,"column":14}},{"generated":{"line":212,"column":40},"source":"property.js","original":{"line":113,"column":21}},{"generated":{"line":212,"column":55},"source":"property.js","original":{"line":113,"column":27}},{"generated":{"line":213,"column":8},"source":"property.js","original":{"line":113,"column":28}},{"generated":{"line":214,"column":8},"source":"property.js","original":{"line":113,"column":28}},{"generated":{"line":215,"column":10},"source":"property.js","original":{"line":113,"column":28}},{"generated":{"line":216,"column":6},"source":"property.js","original":{"line":113,"column":28}},{"generated":{"line":217,"column":4},"source":"property.js","original":{"line":113,"column":28}},{"generated":{"line":218,"column":2},"source":"property.js","original":{"line":113,"column":28}},{"generated":{"line":218,"column":3},"source":"property.js","original":{"line":115,"column":1}},{"generated":{"line":219,"column":2},"source":"property.js","original":{"line":115,"column":1}},{"generated":{"line":220,"column":4},"source":"property.js","original":{"line":115,"column":1}},{"generated":{"line":221,"column":2},"source":"property.js","original":{"line":115,"column":1}},{"generated":{"line":222,"column":0},"source":"property.js","original":{"line":115,"column":1}},{"generated":{"line":222,"column":4},"source":"property.js","original":{"line":115,"column":2}},{"generated":{"line":223,"column":0},"source":"property.js","original":{"line":115,"column":3}}],"sources":{"property.js":"/* eslint-disable */\nimport axios from 'axios';\nimport catchAsync from \"../../utils/catchAsync\";\nimport { showAlert } from './alerts';\n\nexport const createProperty = async (address, city, listingNum, propertyStyle, garageType, garageSize, berRating, squareFeet, lotSize,  numBedroom, numBathroom, price, imageCover, description, biddingPrice) => {\n    try {\n      const res = await axios({\n        method: 'POST',\n        url: 'http://localhost:3000/api/v1/properties',\n        data: {\n          address,\n          city,\n          listingNum,\n          propertyStyle,\n          garageType,\n          garageSize,\n          berRating,\n          squareFeet,\n          lotSize,\n          numBedroom,\n          numBathroom,\n          price,\n          imageCover,\n          description,\n          biddingPrice\n        }\n      });\n  \n      if (res.data.status === 'success') {\n        showAlert('success', 'Property created successfully!');\n      }\n    } catch (err) {\n      showAlert('error', err.response.data.message);\n      console.log(err);\n    }\n  };\n\nexport const getProperty = async (propertyId) => {\n  try {\n  const res = await axios({\n    method: 'GET',\n    url: `http://localhost:3000/api/v1/properties/${propertyId}`\n  });\n\n  if(res.data.status === 'success'){\n    return res.data.data;\n  }\n}catch (err) {\n  showAlert('error', err.response.data.message);\n}\n};\n\nexport const soldProperty = catchAsync(async (propertyAddress) =>{\n  try {\n    const res = await axios({\n      method: \"POST\",\n      url: \"http://localhost:3000/api/v1/properties/soldProperty\",\n      data: {\n        address: propertyAddress\n      }\n    });\n\n    if (res.data.status === \"success\") {\n      showAlert(\"success\", \"Property Sold!\");\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1500);\n    }\n  } catch (err) {\n    showAlert(\"error\", err);\n  }\n});\n\nexport const placeBid = catchAsync(async (propertyAddress, newBidPrice, curBidder) =>{\n  try {\n    const res = await axios({\n      method: \"POST\",\n      url: \"http://localhost:3000/api/v1/properties/placeBid\",\n      data: {\n        address: propertyAddress,\n        biddingPrice: newBidPrice,\n        bidder: curBidder\n      }\n    });\n\n    if (res.data.status === \"success\") {\n      showAlert(\"success\", \"New bid is placed\");\n      setTimeout(() => {\n        document.location.reload();\n      }, 3000);\n    }\n  } catch (err) {\n    console.log(err)\n    showAlert(\"error\", err);\n  }\n});\n\nexport const addView = catchAsync(async (propertyAddress) =>{\n  try {\n    const res = await axios({\n      method: \"POST\",\n      url: \"http://localhost:3000/api/v1/properties/addView\",\n      data: {\n        address: propertyAddress\n      }\n    });\n\n    if (res.data.status === \"success\") {\n      console.log(\"user viewed!\")\n    }\n  } catch (err) {\n    showAlert(\"error\", err);\n  }\n});"},"lineCount":null}},"error":null,"hash":"7bbfec4d2067e26dcb8ee580476069b8","cacheData":{"env":{}}}